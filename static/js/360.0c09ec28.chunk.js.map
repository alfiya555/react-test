{"version":3,"file":"static/js/360.0c09ec28.chunk.js","mappings":"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","sources":["../node_modules/@chakra-ui/avatar/dist/chunk-UQKBGXXQ.mjs","../node_modules/@chakra-ui/avatar/dist/chunk-ZXZNYCCD.mjs","../node_modules/@chakra-ui/avatar/dist/chunk-F3YZVIUT.mjs","../node_modules/@chakra-ui/avatar/dist/chunk-DXGPTSUR.mjs","../node_modules/@chakra-ui/avatar/dist/chunk-QVBG3QXJ.mjs","../node_modules/@chakra-ui/button/dist/chunk-DGWZA2DU.mjs","../node_modules/@chakra-ui/button/dist/chunk-HCASMTTF.mjs","../node_modules/@chakra-ui/button/dist/chunk-HNNHG6RU.mjs","../node_modules/@chakra-ui/button/dist/chunk-NAA7TEES.mjs","../node_modules/@chakra-ui/button/dist/chunk-FRFD4OXU.mjs","../node_modules/@chakra-ui/image/dist/chunk-HR33I6FK.mjs","../node_modules/@chakra-ui/react-use-merge-refs/dist/index.mjs"],"sourcesContent":["import {\n  useAvatarStyles\n} from \"./chunk-QVBG3QXJ.mjs\";\n\n// src/avatar-name.tsx\nimport { chakra } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction initials(name) {\n  var _a;\n  const names = name.split(\" \");\n  const firstName = (_a = names[0]) != null ? _a : \"\";\n  const lastName = names.length > 1 ? names[names.length - 1] : \"\";\n  return firstName && lastName ? `${firstName.charAt(0)}${lastName.charAt(0)}` : firstName.charAt(0);\n}\nfunction AvatarName(props) {\n  const { name, getInitials, ...rest } = props;\n  const styles = useAvatarStyles();\n  return /* @__PURE__ */ jsx(chakra.div, { role: \"img\", \"aria-label\": name, ...rest, __css: styles.label, children: name ? getInitials == null ? void 0 : getInitials(name) : null });\n}\nAvatarName.displayName = \"AvatarName\";\n\nexport {\n  initials,\n  AvatarName\n};\n","// src/generic-avatar-icon.tsx\nimport { chakra } from \"@chakra-ui/system\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar GenericAvatarIcon = (props) => /* @__PURE__ */ jsxs(\n  chakra.svg,\n  {\n    viewBox: \"0 0 128 128\",\n    color: \"#fff\",\n    width: \"100%\",\n    height: \"100%\",\n    className: \"chakra-avatar__svg\",\n    ...props,\n    children: [\n      /* @__PURE__ */ jsx(\n        \"path\",\n        {\n          fill: \"currentColor\",\n          d: \"M103,102.1388 C93.094,111.92 79.3504,118 64.1638,118 C48.8056,118 34.9294,111.768 25,101.7892 L25,95.2 C25,86.8096 31.981,80 40.6,80 L87.4,80 C96.019,80 103,86.8096 103,95.2 L103,102.1388 Z\"\n        }\n      ),\n      /* @__PURE__ */ jsx(\n        \"path\",\n        {\n          fill: \"currentColor\",\n          d: \"M63.9961647,24 C51.2938136,24 41,34.2938136 41,46.9961647 C41,59.7061864 51.2938136,70 63.9961647,70 C76.6985159,70 87,59.7061864 87,46.9961647 C87,34.2938136 76.6985159,24 63.9961647,24\"\n        }\n      )\n    ]\n  }\n);\n\nexport {\n  GenericAvatarIcon\n};\n","import {\n  AvatarName\n} from \"./chunk-UQKBGXXQ.mjs\";\nimport {\n  GenericAvatarIcon\n} from \"./chunk-ZXZNYCCD.mjs\";\n\n// src/avatar-image.tsx\nimport { useImage } from \"@chakra-ui/image\";\nimport { chakra } from \"@chakra-ui/system\";\nimport { cloneElement } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction AvatarImage(props) {\n  const {\n    src,\n    srcSet,\n    onError,\n    onLoad,\n    getInitials,\n    name,\n    borderRadius,\n    loading,\n    iconLabel,\n    icon = /* @__PURE__ */ jsx(GenericAvatarIcon, {}),\n    ignoreFallback,\n    referrerPolicy,\n    crossOrigin\n  } = props;\n  const status = useImage({ src, onError, crossOrigin, ignoreFallback });\n  const hasLoaded = status === \"loaded\";\n  const showFallback = !src || !hasLoaded;\n  if (showFallback) {\n    return name ? /* @__PURE__ */ jsx(\n      AvatarName,\n      {\n        className: \"chakra-avatar__initials\",\n        getInitials,\n        name\n      }\n    ) : cloneElement(icon, {\n      role: \"img\",\n      \"aria-label\": iconLabel\n    });\n  }\n  return /* @__PURE__ */ jsx(\n    chakra.img,\n    {\n      src,\n      srcSet,\n      alt: name,\n      onLoad,\n      referrerPolicy,\n      crossOrigin: crossOrigin != null ? crossOrigin : void 0,\n      className: \"chakra-avatar__img\",\n      loading,\n      __css: {\n        width: \"100%\",\n        height: \"100%\",\n        objectFit: \"cover\",\n        borderRadius\n      }\n    }\n  );\n}\nAvatarImage.displayName = \"AvatarImage\";\n\nexport {\n  AvatarImage\n};\n","import {\n  AvatarImage\n} from \"./chunk-F3YZVIUT.mjs\";\nimport {\n  initials\n} from \"./chunk-UQKBGXXQ.mjs\";\nimport {\n  AvatarStylesProvider\n} from \"./chunk-QVBG3QXJ.mjs\";\nimport {\n  GenericAvatarIcon\n} from \"./chunk-ZXZNYCCD.mjs\";\n\n// src/avatar.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { callAllHandlers, cx, dataAttr } from \"@chakra-ui/shared-utils\";\nimport { useState } from \"react\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar baseStyle = {\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  textAlign: \"center\",\n  textTransform: \"uppercase\",\n  fontWeight: \"medium\",\n  position: \"relative\",\n  flexShrink: 0\n};\nvar Avatar = forwardRef((props, ref) => {\n  const styles = useMultiStyleConfig(\"Avatar\", props);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const {\n    src,\n    srcSet,\n    name,\n    showBorder,\n    borderRadius = \"full\",\n    onError,\n    onLoad: onLoadProp,\n    getInitials = initials,\n    icon = /* @__PURE__ */ jsx(GenericAvatarIcon, {}),\n    iconLabel = \" avatar\",\n    loading,\n    children,\n    borderColor,\n    ignoreFallback,\n    crossOrigin,\n    ...rest\n  } = omitThemingProps(props);\n  const avatarStyles = {\n    borderRadius,\n    borderWidth: showBorder ? \"2px\" : void 0,\n    ...baseStyle,\n    ...styles.container\n  };\n  if (borderColor) {\n    avatarStyles.borderColor = borderColor;\n  }\n  return /* @__PURE__ */ jsx(\n    chakra.span,\n    {\n      ref,\n      ...rest,\n      className: cx(\"chakra-avatar\", props.className),\n      \"data-loaded\": dataAttr(isLoaded),\n      __css: avatarStyles,\n      children: /* @__PURE__ */ jsxs(AvatarStylesProvider, { value: styles, children: [\n        /* @__PURE__ */ jsx(\n          AvatarImage,\n          {\n            src,\n            srcSet,\n            loading,\n            onLoad: callAllHandlers(onLoadProp, () => {\n              setIsLoaded(true);\n            }),\n            onError,\n            getInitials,\n            name,\n            borderRadius,\n            icon,\n            iconLabel,\n            ignoreFallback,\n            crossOrigin\n          }\n        ),\n        children\n      ] })\n    }\n  );\n});\nAvatar.displayName = \"Avatar\";\n\nexport {\n  baseStyle,\n  Avatar\n};\n","// src/avatar-context.tsx\nimport { createContext } from \"@chakra-ui/react-context\";\nvar [AvatarStylesProvider, useAvatarStyles] = createContext({\n  name: `AvatarStylesContext`,\n  hookName: `useAvatarStyles`,\n  providerName: \"<Avatar/>\"\n});\n\nexport {\n  AvatarStylesProvider,\n  useAvatarStyles\n};\n","// src/button-context.ts\nimport { createContext } from \"@chakra-ui/react-context\";\nvar [ButtonGroupProvider, useButtonGroup] = createContext({\n  strict: false,\n  name: \"ButtonGroupContext\"\n});\n\nexport {\n  ButtonGroupProvider,\n  useButtonGroup\n};\n","// src/button-icon.tsx\nimport { chakra } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { cloneElement, isValidElement } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction ButtonIcon(props) {\n  const { children, className, ...rest } = props;\n  const _children = isValidElement(children) ? cloneElement(children, {\n    \"aria-hidden\": true,\n    focusable: false\n  }) : children;\n  const _className = cx(\"chakra-button__icon\", className);\n  return /* @__PURE__ */ jsx(\n    chakra.span,\n    {\n      display: \"inline-flex\",\n      alignSelf: \"center\",\n      flexShrink: 0,\n      ...rest,\n      className: _className,\n      children: _children\n    }\n  );\n}\nButtonIcon.displayName = \"ButtonIcon\";\n\nexport {\n  ButtonIcon\n};\n","// src/button-spinner.tsx\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport { chakra } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { useMemo } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction ButtonSpinner(props) {\n  const {\n    label,\n    placement,\n    spacing = \"0.5rem\",\n    children = /* @__PURE__ */ jsx(Spinner, { color: \"currentColor\", width: \"1em\", height: \"1em\" }),\n    className,\n    __css,\n    ...rest\n  } = props;\n  const _className = cx(\"chakra-button__spinner\", className);\n  const marginProp = placement === \"start\" ? \"marginEnd\" : \"marginStart\";\n  const spinnerStyles = useMemo(\n    () => ({\n      display: \"flex\",\n      alignItems: \"center\",\n      position: label ? \"relative\" : \"absolute\",\n      [marginProp]: label ? spacing : 0,\n      fontSize: \"1em\",\n      lineHeight: \"normal\",\n      ...__css\n    }),\n    [__css, label, marginProp, spacing]\n  );\n  return /* @__PURE__ */ jsx(chakra.div, { className: _className, ...rest, __css: spinnerStyles, children });\n}\nButtonSpinner.displayName = \"ButtonSpinner\";\n\nexport {\n  ButtonSpinner\n};\n","import {\n  useButtonType\n} from \"./chunk-FRFD4OXU.mjs\";\nimport {\n  useButtonGroup\n} from \"./chunk-DGWZA2DU.mjs\";\nimport {\n  ButtonIcon\n} from \"./chunk-HCASMTTF.mjs\";\nimport {\n  ButtonSpinner\n} from \"./chunk-HNNHG6RU.mjs\";\n\n// src/button.tsx\nimport { useMergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx, dataAttr } from \"@chakra-ui/shared-utils\";\nimport { useMemo } from \"react\";\nimport { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nvar Button = forwardRef((props, ref) => {\n  const group = useButtonGroup();\n  const styles = useStyleConfig(\"Button\", { ...group, ...props });\n  const {\n    isDisabled = group == null ? void 0 : group.isDisabled,\n    isLoading,\n    isActive,\n    children,\n    leftIcon,\n    rightIcon,\n    loadingText,\n    iconSpacing = \"0.5rem\",\n    type,\n    spinner,\n    spinnerPlacement = \"start\",\n    className,\n    as,\n    ...rest\n  } = omitThemingProps(props);\n  const buttonStyles = useMemo(() => {\n    const _focus = { ...styles == null ? void 0 : styles[\"_focus\"], zIndex: 1 };\n    return {\n      display: \"inline-flex\",\n      appearance: \"none\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      userSelect: \"none\",\n      position: \"relative\",\n      whiteSpace: \"nowrap\",\n      verticalAlign: \"middle\",\n      outline: \"none\",\n      ...styles,\n      ...!!group && { _focus }\n    };\n  }, [styles, group]);\n  const { ref: _ref, type: defaultType } = useButtonType(as);\n  const contentProps = { rightIcon, leftIcon, iconSpacing, children };\n  return /* @__PURE__ */ jsxs(\n    chakra.button,\n    {\n      ref: useMergeRefs(ref, _ref),\n      as,\n      type: type != null ? type : defaultType,\n      \"data-active\": dataAttr(isActive),\n      \"data-loading\": dataAttr(isLoading),\n      __css: buttonStyles,\n      className: cx(\"chakra-button\", className),\n      ...rest,\n      disabled: isDisabled || isLoading,\n      children: [\n        isLoading && spinnerPlacement === \"start\" && /* @__PURE__ */ jsx(\n          ButtonSpinner,\n          {\n            className: \"chakra-button__spinner--start\",\n            label: loadingText,\n            placement: \"start\",\n            spacing: iconSpacing,\n            children: spinner\n          }\n        ),\n        isLoading ? loadingText || /* @__PURE__ */ jsx(chakra.span, { opacity: 0, children: /* @__PURE__ */ jsx(ButtonContent, { ...contentProps }) }) : /* @__PURE__ */ jsx(ButtonContent, { ...contentProps }),\n        isLoading && spinnerPlacement === \"end\" && /* @__PURE__ */ jsx(\n          ButtonSpinner,\n          {\n            className: \"chakra-button__spinner--end\",\n            label: loadingText,\n            placement: \"end\",\n            spacing: iconSpacing,\n            children: spinner\n          }\n        )\n      ]\n    }\n  );\n});\nButton.displayName = \"Button\";\nfunction ButtonContent(props) {\n  const { leftIcon, rightIcon, children, iconSpacing } = props;\n  return /* @__PURE__ */ jsxs(Fragment, { children: [\n    leftIcon && /* @__PURE__ */ jsx(ButtonIcon, { marginEnd: iconSpacing, children: leftIcon }),\n    children,\n    rightIcon && /* @__PURE__ */ jsx(ButtonIcon, { marginStart: iconSpacing, children: rightIcon })\n  ] });\n}\n\nexport {\n  Button\n};\n","// src/use-button-type.tsx\nimport { useCallback, useState } from \"react\";\nfunction useButtonType(value) {\n  const [isButton, setIsButton] = useState(!value);\n  const refCallback = useCallback((node) => {\n    if (!node)\n      return;\n    setIsButton(node.tagName === \"BUTTON\");\n  }, []);\n  const type = isButton ? \"button\" : void 0;\n  return { ref: refCallback, type };\n}\n\nexport {\n  useButtonType\n};\n","// src/use-image.ts\nimport { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nfunction useImage(props) {\n  const {\n    loading,\n    src,\n    srcSet,\n    onLoad,\n    onError,\n    crossOrigin,\n    sizes,\n    ignoreFallback\n  } = props;\n  const [status, setStatus] = useState(\"pending\");\n  useEffect(() => {\n    setStatus(src ? \"loading\" : \"pending\");\n  }, [src]);\n  const imageRef = useRef();\n  const load = useCallback(() => {\n    if (!src)\n      return;\n    flush();\n    const img = new Image();\n    img.src = src;\n    if (crossOrigin)\n      img.crossOrigin = crossOrigin;\n    if (srcSet)\n      img.srcset = srcSet;\n    if (sizes)\n      img.sizes = sizes;\n    if (loading)\n      img.loading = loading;\n    img.onload = (event) => {\n      flush();\n      setStatus(\"loaded\");\n      onLoad == null ? void 0 : onLoad(event);\n    };\n    img.onerror = (error) => {\n      flush();\n      setStatus(\"failed\");\n      onError == null ? void 0 : onError(error);\n    };\n    imageRef.current = img;\n  }, [src, crossOrigin, srcSet, sizes, onLoad, onError, loading]);\n  const flush = () => {\n    if (imageRef.current) {\n      imageRef.current.onload = null;\n      imageRef.current.onerror = null;\n      imageRef.current = null;\n    }\n  };\n  useSafeLayoutEffect(() => {\n    if (ignoreFallback)\n      return void 0;\n    if (status === \"loading\") {\n      load();\n    }\n    return () => {\n      flush();\n    };\n  }, [status, load, ignoreFallback]);\n  return ignoreFallback ? \"loaded\" : status;\n}\nvar shouldShowFallbackImage = (status, fallbackStrategy) => status !== \"loaded\" && fallbackStrategy === \"beforeLoadOrError\" || status === \"failed\" && fallbackStrategy === \"onError\";\n\nexport {\n  useImage,\n  shouldShowFallbackImage\n};\n","// src/index.ts\nimport { useMemo } from \"react\";\nfunction assignRef(ref, value) {\n  if (ref == null)\n    return;\n  if (typeof ref === \"function\") {\n    ref(value);\n    return;\n  }\n  try {\n    ref.current = value;\n  } catch (error) {\n    throw new Error(`Cannot assign value '${value}' to ref '${ref}'`);\n  }\n}\nfunction mergeRefs(...refs) {\n  return (node) => {\n    refs.forEach((ref) => {\n      assignRef(ref, node);\n    });\n  };\n}\nfunction useMergeRefs(...refs) {\n  return useMemo(() => mergeRefs(...refs), refs);\n}\nexport {\n  assignRef,\n  mergeRefs,\n  useMergeRefs\n};\n"],"names":["initials","name","_a","names","split","firstName","lastName","length","concat","charAt","AvatarName","props","getInitials","rest","_objectWithoutProperties","_excluded","styles","useAvatarStyles","jsx","chakra","div","_objectSpread","role","__css","label","children","displayName","GenericAvatarIcon","jsxs","svg","viewBox","color","width","height","className","fill","d","AvatarImage","src","srcSet","onError","onLoad","borderRadius","loading","iconLabel","_props$icon","icon","ignoreFallback","referrerPolicy","crossOrigin","status","useImage","cloneElement","img","alt","objectFit","baseStyle","display","alignItems","justifyContent","textAlign","textTransform","fontWeight","position","flexShrink","Avatar","forwardRef","ref","useMultiStyleConfig","_useState","useState","_useState2","_slicedToArray","isLoaded","setIsLoaded","_omitThemingProps","omitThemingProps","showBorder","_omitThemingProps$bor","onLoadProp","_omitThemingProps$get","_omitThemingProps$ico","_omitThemingProps$ico2","borderColor","avatarStyles","borderWidth","container","span","cx","dataAttr","AvatarStylesProvider","value","callAllHandlers","_createContext","createContext","hookName","providerName","_createContext2","strict","useButtonGroup","ButtonIcon","_children","isValidElement","focusable","_className","alignSelf","ButtonSpinner","placement","_props$spacing","spacing","_props$children","Spinner","marginProp","spinnerStyles","useMemo","_objectSpread2","_defineProperty","Button","group","useStyleConfig","_omitThemingProps$isD","isDisabled","isLoading","isActive","leftIcon","rightIcon","loadingText","iconSpacing","type","spinner","_omitThemingProps$spi","spinnerPlacement","as","buttonStyles","_focus","zIndex","appearance","userSelect","whiteSpace","verticalAlign","outline","_useButtonType","isButton","setIsButton","useCallback","node","tagName","useButtonType","_ref","defaultType","contentProps","button","useMergeRefs","disabled","opacity","ButtonContent","Fragment","marginEnd","marginStart","sizes","setStatus","useEffect","imageRef","useRef","load","flush","Image","srcset","onload","event","onerror","error","current","useSafeLayoutEffect","shouldShowFallbackImage","fallbackStrategy","mergeRefs","_len","arguments","refs","Array","_key","forEach","Error","assignRef","_len2","_key2","apply"],"sourceRoot":""}