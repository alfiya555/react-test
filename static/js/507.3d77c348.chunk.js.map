{"version":3,"file":"static/js/507.3d77c348.chunk.js","mappings":"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","sources":["components/dashboards/SmallChart.tsx","components/dashboards/DonutChart.tsx","components/dashboards/DualLinesChart.tsx","components/dashboards/PercentageChart.tsx","components/dashboards/PercentageChart2.tsx","components/dashboards/Table.tsx","pages/MainPage.tsx"],"sourcesContent":["import { memo } from 'react';\r\nimport {Box, Flex, Icon} from '@chakra-ui/react';\r\nimport {MdArrowCircleDown, MdArrowCircleUp} from \"react-icons/md\";\r\nimport { Column } from '@ant-design/plots';\r\n\r\nconst SmallChart = ({ title, percentage, amount, color = 'blue' }: { title: string, percentage: number, amount: string, color?: string }) => {\r\n    const data = new Array(10).fill(null).map((item, index) => ({\r\n        type: index,\r\n        value: Math.random()*100,\r\n    }))\r\n    const config = {\r\n        data,\r\n        width: 60,\r\n        color,\r\n        xField: 'type',\r\n        yField: 'value',\r\n        xAxis: {\r\n            label: null,\r\n            grid: null,\r\n        },\r\n        yAxis: {\r\n            label: null,\r\n            grid: null,\r\n        },\r\n    };\r\n\r\n    return (\r\n        <Flex flexDirection='row' justifyContent={'space-between'} height={'166px'} width={'100%'} p={6} borderRadius={'16px'} boxShadow={'rgba(145, 158, 171, 0.2) 0px 0px 2px 0px, rgba(145, 158, 171, 0.12) 0px 12px 24px -4px'}>\r\n            <Flex flexDirection={'column'} height={'100%'} justifyContent={'space-between'}>\r\n                <Box fontSize={'14px'} fontWeight={600} mb={2}>{ title }</Box>\r\n                <Flex flexDirection={'row'} alignItems={'center'}><Icon mr={1} color={percentage > 0 ? 'green' : 'red'} boxSize={6} as={percentage > 0 ? MdArrowCircleUp : MdArrowCircleDown}/>{ `${percentage > 0 ? '+' : ''}${percentage}` }%</Flex>\r\n                <Box fontSize={'32px'} fontWeight={700}>{ amount }</Box>\r\n            </Flex>\r\n            <Flex width={'60px'}>\r\n                <Column {...config} />\r\n            </Flex>\r\n        </Flex>\r\n    );\r\n};\r\n\r\nexport default memo(SmallChart);","import { memo } from 'react';\r\nimport {Box, Flex} from '@chakra-ui/react';\r\nimport { Pie } from '@ant-design/plots';\r\n\r\nconst DonutChart = ({ title }: { title: string }) => {\r\n    const data = [\r\n        {\r\n            type: \"Mac\",\r\n            value: 12244,\r\n        },\r\n        {\r\n            type: \"Windows\",\r\n            value: 53345,\r\n        },\r\n        {\r\n            type: \"IOS\",\r\n            value: 34533,\r\n        },\r\n        {\r\n            type: \"Android\",\r\n            value: 78302,\r\n        },\r\n    ];\r\n    const config = {\r\n        appendPadding: 10,\r\n        width: 350,\r\n        data,\r\n        angleField: 'value',\r\n        colorField: 'type',\r\n        radius: 1,\r\n        innerRadius: 0.9,\r\n        label: {\r\n            type: 'spider',\r\n            offset: '-50%',\r\n            content: '{value}',\r\n        },\r\n        itemValue: null,\r\n        legend: {\r\n            layout: 'horizontal' as \"horizontal\" | \"vertical\" | undefined,\r\n            position: 'bottom' as any,\r\n        },\r\n        interactions: [\r\n            {\r\n                type: 'element-selected',\r\n            },\r\n            {\r\n                type: 'element-active',\r\n            },\r\n        ],\r\n    };\r\n\r\n    return (\r\n        <Flex flexDirection='column' justifyContent={'space-between'} height={'492px'} width={'100%'} p={6} borderRadius={'16px'} boxShadow={'rgba(145, 158, 171, 0.2) 0px 0px 2px 0px, rgba(145, 158, 171, 0.12) 0px 12px 24px -4px'}>\r\n            <Box fontSize={'14px'} fontWeight={600} mb={2}>{ title }</Box>\r\n            <Flex width={'100%'}>\r\n                <Pie {...config} />\r\n            </Flex>\r\n        </Flex>\r\n    );\r\n};\r\n\r\nexport default memo(DonutChart);","import { memo } from 'react';\r\nimport {Box, Flex} from '@chakra-ui/react';\r\nimport { DualAxes } from '@ant-design/plots';\r\n\r\nconst DualLinesChart = ({ title }: { title: string }) => {\r\n    const data = [\r\n        {\r\n            month: 'Jan',\r\n            Asia: 10,\r\n            America: 10,\r\n        },\r\n        {\r\n            month: 'Feb',\r\n            Asia: 41,\r\n            America: 34,\r\n        },\r\n        {\r\n            month: 'Mar',\r\n            Asia: 35,\r\n            America: 13,\r\n        },\r\n        {\r\n            month: 'Apr',\r\n            Asia: 51,\r\n            America: 56,\r\n        },\r\n        {\r\n            month: 'May',\r\n            Asia: 49,\r\n            America: 77,\r\n        },\r\n        {\r\n            month: 'Jun',\r\n            Asia: 62,\r\n            America: 88,\r\n        },\r\n        {\r\n            month: 'Jul',\r\n            Asia: 69,\r\n            America: 99,\r\n        },\r\n        {\r\n            month: 'Aug',\r\n            Asia: 91,\r\n            America: 77,\r\n        },\r\n        {\r\n            month: 'Sep',\r\n            Asia: 148,\r\n            America: 45,\r\n        },\r\n        {\r\n            month: 'Oct',\r\n            Asia: 35,\r\n            America: 13,\r\n        },\r\n        {\r\n            month: 'Nov',\r\n            Asia: 51,\r\n            America: 56,\r\n        },\r\n        {\r\n            month: 'Dec',\r\n            Asia: 49,\r\n            America: 77,\r\n        },\r\n    ];\r\n    const config = {\r\n        data: [data, data],\r\n        xField: 'month',\r\n        yField: ['Asia', 'America'],\r\n        geometryOptions: [\r\n            {\r\n                geometry: 'line',\r\n                color: 'green',\r\n                smooth: true,\r\n            },\r\n            {\r\n                geometry: 'line',\r\n                color: 'yellow',\r\n                smooth: true,\r\n            },\r\n        ],\r\n    };\r\n\r\n    return (\r\n        <Flex flexDirection='column' justifyContent={'space-between'} height={'492px'} width={'100%'} p={6} borderRadius={'16px'} boxShadow={'rgba(145, 158, 171, 0.2) 0px 0px 2px 0px, rgba(145, 158, 171, 0.12) 0px 12px 24px -4px'}>\r\n            <Box fontSize={'14px'} fontWeight={600} mb={2}>{ title }</Box>\r\n            <Flex width={'100%'}>\r\n                <DualAxes {...config} />\r\n            </Flex>\r\n        </Flex>\r\n    );\r\n};\r\n\r\nexport default memo(DualLinesChart);","import { memo } from 'react';\r\nimport {Box, Flex, Icon} from '@chakra-ui/react';\r\nimport { Gauge } from '@ant-design/plots';\r\nimport {MdSupervisedUserCircle} from \"react-icons/md\";\r\n\r\nconst PercentageChart = () => {\r\n    const config = {\r\n        width: 86,\r\n        percent: 0.75,\r\n        range: {\r\n            color: 'l(0) 0:#5cf7b6 1:#4db087',\r\n        },\r\n        startAngle: 0,\r\n        endAngle: 2 * Math.PI,\r\n        indicator: false as any,\r\n        statistic: {\r\n            title: {\r\n                style: {\r\n                    fontSize: '16px',\r\n                    color: 'white',\r\n                },\r\n                formatter: () => '75%',\r\n            },\r\n        },\r\n    };\r\n\r\n    return (\r\n        <Flex flexDirection='row' backgroundColor={'#007867'} justifyContent={'space-between'} alignItems={'center'} height={'135px'} width={'100%'} p={6} borderRadius={'16px'} boxShadow={'rgba(145, 158, 171, 0.2) 0px 0px 2px 0px, rgba(145, 158, 171, 0.12) 0px 12px 24px -4px'}>\r\n            <Flex mr={3}>\r\n                <Gauge {...config} />\r\n            </Flex>\r\n            <Flex flexDirection={'column'} color={'white'}>\r\n                <Box fontSize={'24px'} fontWeight={700}>38,566</Box>\r\n                <Box fontSize={'14px'} opacity={0.6} fontWeight={500}>Conversion</Box>\r\n            </Flex>\r\n            <Icon color='white' boxSize={24} as={MdSupervisedUserCircle} opacity={0.2} transform={'translateX(35%)'}/>\r\n        </Flex>\r\n    );\r\n};\r\n\r\nexport default memo(PercentageChart);","import { memo } from 'react';\r\nimport {Box, Flex, Icon} from '@chakra-ui/react';\r\nimport { Gauge } from '@ant-design/plots';\r\nimport {MdEmail} from \"react-icons/md\";\r\n\r\nconst PercentageChart = () => {\r\n    const config = {\r\n        width: 86,\r\n        percent: 0.48,\r\n        range: {\r\n            color: 'l(0) 0:#78f1fa 1:#43d6e0',\r\n        },\r\n        startAngle: 0,\r\n        endAngle: 2 * Math.PI,\r\n        indicator: false as any,\r\n        statistic: {\r\n            title: {\r\n                style: {\r\n                    fontSize: '16px',\r\n                    color: 'white',\r\n                },\r\n                formatter: () => '48%',\r\n            },\r\n        },\r\n    };\r\n\r\n    return (\r\n        <Flex flexDirection='row' backgroundColor={'#006C9C'} justifyContent={'space-between'} alignItems={'center'} height={'135px'} width={'100%'} p={6} borderRadius={'16px'} boxShadow={'rgba(145, 158, 171, 0.2) 0px 0px 2px 0px, rgba(145, 158, 171, 0.12) 0px 12px 24px -4px'}>\r\n            <Flex mr={3}>\r\n                <Gauge {...config} />\r\n            </Flex>\r\n            <Flex flexDirection={'column'} color={'white'}>\r\n                <Box fontSize={'24px'} fontWeight={700}>55,566</Box>\r\n                <Box fontSize={'14px'} opacity={0.6} fontWeight={500}>Applications</Box>\r\n            </Flex>\r\n            <Icon color='white' boxSize={24} as={MdEmail} opacity={0.2} transform={'translateX(25%)'}/>\r\n        </Flex>\r\n    );\r\n};\r\n\r\nexport default memo(PercentageChart);","import {memo, useMemo} from 'react';\r\nimport {\r\n    Flex,\r\n    Box,\r\n    Table,\r\n    Thead,\r\n    Tbody,\r\n    Tfoot,\r\n    Tr,\r\n    Th,\r\n    Td,\r\n    TableCaption,\r\n    TableContainer,\r\n} from '@chakra-ui/react'\r\n\r\nconst TableDashboard = ({ title }: { title: string }) => {\r\n    const columns = [\r\n        {\r\n            title: 'Invoice ID',\r\n            value: 'id',\r\n        },\r\n        {\r\n            title: 'Category',\r\n            value: 'category',\r\n        },\r\n        {\r\n            title: 'Price',\r\n            value: 'price',\r\n        },\r\n        {\r\n            title: 'Status',\r\n            value: 'status',\r\n        },\r\n    ];\r\n    const data: Record<string, string>[] = [\r\n        {\r\n            id: 'INV-1990',\r\n            category: 'Android',\r\n            price: '$83.74',\r\n            status: 'Paid',\r\n        },\r\n        {\r\n            id: 'INV-1991',\r\n            category: 'Mac',\r\n            price: '$83.74',\r\n            status: 'Out Of Date',\r\n        },\r\n        {\r\n            id: 'INV-1992',\r\n            category: 'Windows',\r\n            price: '$83.74',\r\n            status: 'Progress',\r\n        },\r\n        {\r\n            id: 'INV-1993',\r\n            category: 'Android',\r\n            price: '$83.74',\r\n            status: 'Paid',\r\n        },\r\n        {\r\n            id: 'INV-1994',\r\n            category: 'Mac',\r\n            price: '$83.74',\r\n            status: 'Paid',\r\n        },\r\n    ];\r\n    const bgColor = useMemo(() => {\r\n        return (status: string) => {\r\n            switch (status) {\r\n                case 'Paid':\r\n                    return 'rgba(34, 197, 94, 0.16)';\r\n                case 'Out Of Date':\r\n                    return 'rgba(255, 86, 48, 0.16)';\r\n                case 'Progress':\r\n                    return 'rgba(255, 171, 0, 0.16)';\r\n                default:\r\n                    return '';\r\n            }\r\n        }\r\n    }, []);\r\n    const color = useMemo(() => {\r\n        return (status: string) => {\r\n            switch (status) {\r\n                case 'Paid':\r\n                    return 'rgb(17, 141, 87)';\r\n                case 'Out Of Date':\r\n                    return 'rgb(183, 29, 24)';\r\n                case 'Progress':\r\n                    return 'rgb(183, 110, 0)';\r\n                default:\r\n                    return '';\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <Flex flexDirection='column' width={'100%'} borderRadius={'16px'} boxShadow={'rgba(145, 158, 171, 0.2) 0px 0px 2px 0px, rgba(145, 158, 171, 0.12) 0px 12px 24px -4px'}>\r\n            <Box fontSize={'14px'} fontWeight={600} p={6}>{ title }</Box>\r\n            <Flex width={'100%'}>\r\n                <TableContainer width={'100%'}>\r\n                    <Table variant='simple' width={'100%'}>\r\n                        <Thead>\r\n                            <Tr backgroundColor={'#ebeded'}>\r\n                                {columns.map((header) => (<Th key={header.value}>{ header.title }</Th>))}\r\n                            </Tr>\r\n                        </Thead>\r\n                        <Tbody>\r\n                            {data.map((item) => (\r\n                                <Tr key={item.id}>\r\n                                    {columns.map((header) => (<Td key={`${header.value}${item.id}`}>\r\n                                        {header.value === 'status' ? (<Flex width={'fit-content'} p={'6px'} fontSize={'12px'} fontWeight={700} borderRadius={'6px'} backgroundColor={bgColor(item[header.value])} color={color(item[header.value])}>\r\n                                                {item[header.value]}\r\n                                        </Flex>) : item[header.value]}\r\n                                    </Td>))}\r\n                                </Tr>\r\n                            ))}\r\n                        </Tbody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </Flex>\r\n        </Flex>\r\n    );\r\n};\r\n\r\nexport default memo(TableDashboard);","import { memo } from 'react';\r\nimport { Flex } from '@chakra-ui/react';\r\nimport SmallChart from \"../components/dashboards/SmallChart\";\r\nimport DonutChart from \"../components/dashboards/DonutChart\";\r\nimport DualLinesChart from \"../components/dashboards/DualLinesChart\";\r\nimport PercentageChart from \"../components/dashboards/PercentageChart\";\r\nimport PercentageChart2 from \"../components/dashboards/PercentageChart2\";\r\nimport TableDashboard from \"../components/dashboards/Table\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nconst MainPage = () => {\r\n    const {t} = useTranslation();\r\n    return (\r\n        <Flex flexDirection='row' flexWrap={'wrap'} gap={'18px'} p={6} width='100%' height='100%' overflow={'auto'}>\r\n            <Flex width={'calc(33% - 12px)'}>\r\n                <SmallChart title={t('Total Active Users')} percentage={2.6} amount={'18,765'} color={'green'} />\r\n            </Flex>\r\n            <Flex width={'calc(33% - 12px)'}>\r\n                <SmallChart title={t('Total Installed')} percentage={0.2} amount={'4,876'} color={'blue'} />\r\n            </Flex>\r\n            <Flex width={'calc(33% - 12px)'}>\r\n                <SmallChart title={t('Total Downloads')} percentage={-0.1} amount={'678'} color={'yellow'} />\r\n            </Flex>\r\n            <Flex>\r\n                <DonutChart title={t('Current Download')} />\r\n            </Flex>\r\n            <Flex flex={1}>\r\n                <DualLinesChart title={t('Area Installed')} />\r\n            </Flex>\r\n            <Flex flex={1}>\r\n                <TableDashboard title={t('New Invoice')} />\r\n            </Flex>\r\n            <Flex width={'300px'} flexDirection={'column'} gap={'12px'}>\r\n                <PercentageChart />\r\n                <PercentageChart2 />\r\n            </Flex>\r\n        </Flex>\r\n    );\r\n};\r\n\r\nexport default memo(MainPage);"],"names":["SmallChart","_ref","title","percentage","amount","_ref$color","color","config","data","Array","fill","map","item","index","type","value","Math","random","width","xField","yField","xAxis","label","grid","yAxis","_jsxs","Flex","flexDirection","justifyContent","height","p","borderRadius","boxShadow","children","_jsx","Box","fontSize","fontWeight","mb","alignItems","Icon","mr","boxSize","as","MdArrowCircleUp","MdArrowCircleDown","concat","Column","_objectSpread","memo","DonutChart","appendPadding","angleField","colorField","radius","innerRadius","offset","content","itemValue","legend","layout","position","interactions","Pie","DualLinesChart","month","Asia","America","geometryOptions","geometry","smooth","DualAxes","PercentageChart","percent","range","startAngle","endAngle","PI","indicator","statistic","style","formatter","backgroundColor","Gauge","opacity","MdSupervisedUserCircle","transform","MdEmail","TableDashboard","columns","bgColor","useMemo","status","TableContainer","Table","variant","Thead","Tr","header","Th","Tbody","id","category","price","Td","MainPage","t","useTranslation","flexWrap","gap","overflow","flex","PercentageChart2"],"sourceRoot":""}